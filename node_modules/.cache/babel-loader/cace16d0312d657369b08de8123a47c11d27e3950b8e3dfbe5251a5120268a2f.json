{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, unref as _unref, createVNode as _createVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, createBlock as _createBlock, Transition as _Transition } from \"vue\";\nconst _hoisted_1 = {\n  class: \"w-full\"\n};\nconst _hoisted_2 = {\n  class: \"relative shadow-md\"\n};\nconst _hoisted_3 = {\n  class: \"block truncate\"\n};\nconst _hoisted_4 = {\n  class: \"pointer-events-none absolute inset-y-0 right-0 flex items-center pr-2\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"absolute inset-y-0 left-0 flex items-center pl-3 text-blue-600\"\n};\nimport { ref } from 'vue';\nimport { Listbox, ListboxButton, ListboxOptions, ListboxOption } from '@headlessui/vue';\nimport { CheckIcon, ChevronDownIcon } from \"@heroicons/vue/outline\";\nconst __default__ = {\n  name: 'VSelect',\n  component: {\n    Listbox,\n    ListboxButton,\n    ListboxOptions,\n    ListboxOption,\n    CheckIcon,\n    ChevronDownIcon\n  },\n  props: {\n    options: {\n      type: Array,\n      default() {\n        return [];\n      }\n    },\n    selected: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      areOptionsVisible: false\n    };\n  },\n  methods: {\n    selectOption(option) {\n      this.$emit('select', option);\n      this.areOptionsVisible = false;\n    },\n    hideSelect() {\n      this.areOptionsVisible = false;\n    }\n  },\n  mounted() {\n    document.addEventListener('click', this.hideSelect.bind(this), true);\n  },\n  beforeUnmount() {\n    document.removeEventListener('click', this.hideSelect);\n  }\n};\nexport default /*#__PURE__*/Object.assign(__default__, {\n  setup(__props) {\n    const people = [{\n      name: 'Wade Cooper'\n    }, {\n      name: 'Arlene Mccoy'\n    }, {\n      name: 'Devon Webb'\n    }, {\n      name: 'Tom Cook'\n    }, {\n      name: 'Tanya Fox'\n    }, {\n      name: 'Hellen Schmidt'\n    }];\n    const selectedPerson = ref(people[0]);\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_unref(Listbox), {\n        modelValue: selectedPerson.value,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => selectedPerson.value = $event)\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_unref(ListboxButton), {\n          class: \"relative text-slate-500 w-full cursor-pointer ring-1 ring-blue-200 text-slate-900 placeholder-slate-400 rounded-md py-2 pl-3 pr-10 text-left focus:ring-2 focus:ring-blue-300 focus:outline-none appearance-none\"\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"span\", _hoisted_3, _toDisplayString(__props.selected.name), 1), _createElementVNode(\"span\", _hoisted_4, [_createVNode(_unref(ChevronDownIcon), {\n            class: \"h-5 w-5 text-blue-400\",\n            \"aria-hidden\": \"true\"\n          })])]),\n          _: 1\n        }), _createVNode(_Transition, {\n          \"leave-active-class\": \"transition duration-100 ease-in\",\n          \"leave-from-class\": \"opacity-100\",\n          \"leave-to-class\": \"opacity-0\"\n        }, {\n          default: _withCtx(() => [_createVNode(_unref(ListboxOptions), {\n            class: \"absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\"\n          }, {\n            default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.options, option => {\n              return _openBlock(), _createBlock(_unref(ListboxOption), {\n                key: option.value,\n                onClick: $event => _ctx.selectOption(option),\n                value: option,\n                as: \"template\"\n              }, {\n                default: _withCtx(({\n                  active,\n                  selected\n                }) => [_createElementVNode(\"li\", {\n                  class: _normalizeClass([active ? 'bg-blue-100 text-blue-900' : 'text-gray-900', 'relative cursor-pointer select-none  py-2 pl-10 pr-4'])\n                }, [_createElementVNode(\"span\", {\n                  class: _normalizeClass([selected ? 'font-medium' : 'font-normal', 'block truncate'])\n                }, _toDisplayString(option.name), 3), selected ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, [_createVNode(_unref(CheckIcon), {\n                  class: \"h-5 w-5 text-gray-400\"\n                })])) : _createCommentVNode(\"\", true)], 2)]),\n                _: 2\n              }, 1032, [\"onClick\", \"value\"]);\n            }), 128))]),\n            _: 1\n          })]),\n          _: 1\n        })])]),\n        _: 1\n      }, 8, [\"modelValue\"])]);\n    };\n  }\n});","map":{"version":3,"names":["ref","Listbox","ListboxButton","ListboxOptions","ListboxOption","CheckIcon","ChevronDownIcon","__default__","name","component","props","options","type","Array","default","selected","Object","data","areOptionsVisible","methods","selectOption","option","$emit","hideSelect","mounted","document","addEventListener","bind","beforeUnmount","removeEventListener","people","selectedPerson"],"sources":["/Users/dev/Desktop/vue /src/components/v-select.vue"],"sourcesContent":["<!-- <template>\n<div>\n    <p @click=\"areOptionsVisible = !areOptionsVisible\">{{ selected }}</p>\n    <div class=\"options\" v-if=\"areOptionsVisible\">\n        <span v-for=\"option in options\" :key=\"option.value\" @click=\"selectOption(option)\">{{ option.name }}</span>\n    </div>\n\n</div>\n</template>\n\n<script>\nexport default {\n    name: 'v-select',\n    components: {\n\n    },\n    props: {\n        options: {\n            type: Array,\n            default () {\n                return []\n            }\n        },\n        selected: {\n            type: Object,\n            default: null\n        }\n    },\n    data() {\n        return {\n            areOptionsVisible: false\n        }\n    },\n    methods: {\n        selectOption(option) {\n            this.$emit('select', option)\n            this.areOptionsVisible = false\n        },\n        hideSelect() {\n            this.areOptionsVisible = false\n        }\n    },\n    mounted() {\n        document.addEventListener('click', this.hideSelect.bind(this), true)\n    },\n    beforeUnmount() {\n        document.removeEventListener('click', this.hideSelect)\n    },\n}\n</script>\n\n<style>\n.options {\n    display: flex;\n    flex-direction: column;\n}\n</style> -->\n\n<template>\n\n    <div class=\"w-full\">\n        <Listbox v-model=\"selectedPerson\">\n            <div class=\"relative  shadow-md \">\n                <ListboxButton class=\"relative text-slate-500  w-full cursor-pointer   ring-1 ring-blue-200 text-slate-900 placeholder-slate-400 rounded-md  py-2 pl-3 pr-10 text-left focus:ring-2 focus:ring-blue-300 focus:outline-none  appearance-none \">\n                    <span class=\"block truncate\">{{ selected.name }}</span>\n                    <span class=\"pointer-events-none absolute  inset-y-0 right-0 flex items-center pr-2\">\n                        <ChevronDownIcon class=\"h-5 w-5 text-blue-400\" aria-hidden=\"true\" />\n                    </span>\n                </ListboxButton>\n\n                <transition leave-active-class=\"transition duration-100 ease-in\" leave-from-class=\"opacity-100\" leave-to-class=\"opacity-0\">\n                    <ListboxOptions class=\"absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm\">\n                        <ListboxOption v-slot=\"{ active, selected }\" v-for=\"option in options\"  :key=\"option.value\" @click=\"selectOption(option)\" :value=\"option\" as=\"template\">\n                            <li :class=\"[\n                  active ? 'bg-blue-100 text-blue-900' : 'text-gray-900',\n                  'relative cursor-pointer select-none  py-2 pl-10 pr-4',\n                ]\">\n                                <span :class=\"[\n                    selected ? 'font-medium' : 'font-normal',\n                    'block truncate',\n                  ]\">{{ option.name }}</span>\n                                <span v-if=\"selected\" class=\"absolute inset-y-0 left-0 flex items-center pl-3 text-blue-600\">\n                                    <CheckIcon class=\"h-5 w-5 text-gray-400\"  />\n                                </span>\n                            </li>\n                        </ListboxOption>\n                    </ListboxOptions>\n                </transition>\n            </div>\n        </Listbox>\n\n    </div>\n</template>\n\n<script setup>\nimport {\n    ref\n} from 'vue'\nimport {\n    Listbox,\n    ListboxButton,\n    ListboxOptions,\n    ListboxOption,\n} from '@headlessui/vue'\nimport {\n    CheckIcon,\n    ChevronDownIcon\n} from \"@heroicons/vue/outline\"\n\nconst people = [{\n        name: 'Wade Cooper'\n    },\n    {\n        name: 'Arlene Mccoy'\n    },\n    {\n        name: 'Devon Webb'\n    },\n    {\n        name: 'Tom Cook'\n    },\n    {\n        name: 'Tanya Fox'\n    },\n    {\n        name: 'Hellen Schmidt'\n    },\n]\nconst selectedPerson = ref(people[0])\n</script>\n\n\n<script>\n  export default {\n      name: 'VSelect',\n      component: {\n        Listbox,\n    ListboxButton,\n    ListboxOptions,\n    ListboxOption,\n    CheckIcon,\n    ChevronDownIcon\n      },\n      props: {\n          options: {\n              type: Array,\n              default () {\n                  return [];\n              },\n          },\n          selected: {\n              type: Object,\n              default () {\n                  return {};\n              },\n          },\n      },\n      data() {\n          return {\n              areOptionsVisible: false,\n          };\n      },\n      methods: {\n          selectOption(option) {\n              this.$emit('select', option);\n\n              this.areOptionsVisible = false;\n          },\n          hideSelect() {\n              this.areOptionsVisible = false;\n          },\n      },\n      mounted() {\n          document.addEventListener('click', this.hideSelect.bind(this), true);\n      },\n      beforeUnmount() {\n          document.removeEventListener('click', this.hideSelect);\n      },\n  };\n</script>\n  \n  <style>\n  .options {\n    display: flex;\n    flex-direction: column;\n  }\n  </style>\n"],"mappings":";;;;;;;;;;;;;;;;;AA+FA,SACIA,GAAG,QACA,KAAK;AACZ,SACIC,OAAO,EACPC,aAAa,EACbC,cAAc,EACdC,aAAa,QACV,iBAAiB;AACxB,SACIC,SAAS,EACTC,eAAe,QACZ,wBAAwB;AA0B7B,MAAAC,WAAA,GAAe;EACXC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAE;IACTR,OAAO;IACXC,aAAa;IACbC,cAAc;IACdC,aAAa;IACbC,SAAS;IACTC;EACE,CAAC;EACDI,KAAK,EAAE;IACHC,OAAO,EAAE;MACLC,IAAI,EAAEC,KAAK;MACXC,OAAOA,CAAA,EAAI;QACP,OAAO,EAAE;MACb;IACJ,CAAC;IACDC,QAAQ,EAAE;MACNH,IAAI,EAAEI,MAAM;MACZF,OAAOA,CAAA,EAAI;QACP,OAAO,CAAC,CAAC;MACb;IACJ;EACJ,CAAC;EACDG,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,iBAAiB,EAAE;IACvB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,YAAYA,CAACC,MAAM,EAAE;MACjB,IAAI,CAACC,KAAK,CAAC,QAAQ,EAAED,MAAM,CAAC;MAE5B,IAAI,CAACH,iBAAiB,GAAG,KAAK;IAClC,CAAC;IACDK,UAAUA,CAAA,EAAG;MACT,IAAI,CAACL,iBAAiB,GAAG,KAAK;IAClC;EACJ,CAAC;EACDM,OAAOA,CAAA,EAAG;IACNC,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAACH,UAAU,CAACI,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;EACxE,CAAC;EACDC,aAAaA,CAAA,EAAG;IACZH,QAAQ,CAACI,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAACN,UAAU,CAAC;EAC1D;AACJ,CAAC;;;IArEH,MAAMO,MAAM,GAAG,CAAC;MACRtB,IAAI,EAAE;IACV,CAAC,EACD;MACIA,IAAI,EAAE;IACV,CAAC,EACD;MACIA,IAAI,EAAE;IACV,CAAC,EACD;MACIA,IAAI,EAAE;IACV,CAAC,EACD;MACIA,IAAI,EAAE;IACV,CAAC,EACD;MACIA,IAAI,EAAE;IACV,CAAC,CACJ;IACD,MAAMuB,cAAc,GAAG/B,GAAG,CAAC8B,MAAM,CAAC,CAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}