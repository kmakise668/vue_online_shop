{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_main_wrapper = _resolveComponent(\"v-main-wrapper\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_v_main_wrapper)]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_v_main_wrapper"],"sources":["/Users/dev/Desktop/vue /src/App.vue"],"sourcesContent":["<template>\n<div >\n\n  <v-main-wrapper />\n</div>\n</template>\n\n<script>\nimport vMainWrapper from './components/v-main-wrapper.vue';\nimport authMixin from './authMixin.js';\nexport default {\n  name: 'app',\n  components: {\n    vMainWrapper\n  },\n  mixins: [authMixin],\n// В момент загрузки приложения или компонента, например, в момент создания Vue экземпляра или в момент монтирования компонента:\ncreated() {\n  // Получение данных из локального хранилища\n  // const token = localStorage.getItem('token');\n  // const role = localStorage.getItem('role');\n\n  // // Проверка наличия токена и роли в локальном хранилище\n  // if (role) {\n  //   // Установка данных в состояние Vuex (если нужно)\n  //   this.$store.commit('SET_AUTH', true);\n  //   this.$store.commit('SET_ROLE', role);\n\n  //   // Установка данных в переменные компонента (если нужно)\n  //   // this.token = token;\n  //   this.role = role;\n  // }\n}\n\n}\n</script>\n\n"],"mappings":";;;uBACAA,mBAAA,CAGM,cADJC,YAAA,CAAkBC,yBAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}