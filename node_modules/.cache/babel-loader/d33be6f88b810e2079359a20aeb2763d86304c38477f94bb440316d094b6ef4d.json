{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nexport default {\n  data() {\n    return {\n      email: '',\n      password: '',\n      res: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async login(event) {\n      event.preventDefault();\n      try {\n        const response = await axios.post('http://localhost:7676/api/users/login', {\n          email: this.email,\n          password: this.password\n        });\n        if (response.status === 200) {\n          const accessToken = response.data.accessToken;\n\n          // Устанавливаем куки с токеном\n          document.cookie = `accessToken=${accessToken}; Secure; SameSite=Strict;`;\n          const {\n            role,\n            id\n          } = jwt_decode(accessToken);\n          localStorage.setItem('role', role);\n          localStorage.setItem('id', id);\n          // alert(accessToken)\n          this.$store.commit('SET_AUTH', true);\n          this.$store.commit('SET_ROLE', role);\n          // Выполняем действия на основе роли пользователя\n          if (role === 1) {\n            this.$router.push('/admin');\n          } else {\n            this.$router.push('/dashboard');\n          }\n        }\n      } catch (error) {\n        console.error(error);\n        if (error.response && error.response.status === 401) {\n          this.errorMessage = 'Ошибка: ' + error.response.data.message;\n        } else if (error.response && error.response.status === 500) {\n          this.errorMessage = 'Внутренняя ошибка сервера';\n        } else {\n          this.errorMessage = 'Не удалось выполнить запрос';\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","jwt_decode","data","email","password","res","errorMessage","methods","login","event","preventDefault","response","post","status","accessToken","document","cookie","role","id","localStorage","setItem","$store","commit","$router","push","error","console","message"],"sources":["/Users/dev/Desktop/vue /src/components/login/v-login.vue"],"sourcesContent":["\n<template>\n  <div class=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\n    <div class=\"sm:mx-auto sm:w-full sm:max-w-sm\">\n\n      <h2 class=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">Войдите в свой аккаунт</h2>\n    </div>\n\n    <div class=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\n      <form class=\"space-y-6\" action=\"#\" @submit=\"login\">\n        <div>\n          <label for=\"email\" class=\"block text-sm font-medium leading-6 text-gray-900\">Email адрес</label>\n          <div class=\"mt-2\">\n            <input id=\"email\" name=\"email\" type=\"email\" autocomplete=\"email\" v-model=\"email\" required=\"\" class=\"block w-full rounded-md border-0 py-1.5  px-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n          </div>\n        </div>\n\n        <div>\n          <div class=\"flex items-center justify-between\">\n            <label for=\"password\" class=\"block text-sm font-medium leading-6 text-gray-900\">Пароль</label>\n            <div class=\"text-sm\">\n              <a href=\"#\" class=\"font-semibold text-indigo-600 hover:text-indigo-500\">Забыли пароль?</a>\n            </div>\n          </div>\n          <div class=\"mt-2\">\n            <input id=\"password\" name=\"password\" type=\"password\" v-model=\"password\" autocomplete=\"current-password\" required=\"\" class=\"block w-full rounded-md border-0 py-1.5 px-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\" />\n          </div>\n        </div>\n\n        <div>\n          <button type=\"submit\" class=\"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\">Войти</button>\n        </div>\n      </form>\n      <p class=\"mt-10 text-center font-semibold text-sm leading-6 text-red-400\">{{ errorMessage }}</p>\n      <router-link to=\"/register\">\n      <p class=\"mt-4 text-center font-medium text-sm leading-6 text-gray-400 hover:text-indigo-500\">Еще не регистрировались?</p>\n </router-link>\n    </div>\n  </div>\n</template>\n\n  <script>\n  import axios from 'axios';\n  import jwt_decode from 'jwt-decode';\n  \n  export default {\n    data() {\n      return {\n        email: '',\n        password: '',\n        res: '',\n        errorMessage: ''\n      };\n    },\n    methods: {\n  async login(event) {\n    event.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:7676/api/users/login', {\n        email: this.email,\n        password: this.password,\n      });\n\n      if (response.status === 200) {\n        const accessToken = response.data.accessToken;\n\n        // Устанавливаем куки с токеном\n        document.cookie = `accessToken=${accessToken}; Secure; SameSite=Strict;`;\n\n        const { role, id } = jwt_decode(accessToken);\n        localStorage.setItem('role', role);\n        localStorage.setItem('id', id);\n        // alert(accessToken)\n        this.$store.commit('SET_AUTH', true);\n        this.$store.commit('SET_ROLE', role);\n        // Выполняем действия на основе роли пользователя\n        if (role === 1) {\n         this.$router.push('/admin');\n        } else {\n          this.$router.push('/dashboard');\n        }\n      }\n    } catch (error) {\n    console.error(error);\n    if (error.response && error.response.status === 401) {\n  this.errorMessage = 'Ошибка: ' + error.response.data.message\n} else if (error.response && error.response.status === 500) {\n  this.errorMessage = 'Внутренняя ошибка сервера';\n} else {\n  this.errorMessage = 'Не удалось выполнить запрос';\n}\n\n}\n\n\n\n\n\n\n  },\n},\n\n  };\n  </script>\n  \n\n  <style>.success-message {\n    color: green;\n    font-weight: bold;\n  }\n  \n  /* Ваши стили для сообщений об ошибке */\n  .error-message {\n    color: red;\n    font-weight: bold;\n  }</style>"],"mappings":";AA0CE,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,UAAS,MAAO,YAAY;AAEnC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,GAAG,EAAE,EAAE;MACPC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACX,MAAMC,KAAKA,CAACC,KAAK,EAAE;MACjBA,KAAK,CAACC,cAAc,CAAC,CAAC;MACtB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMX,KAAK,CAACY,IAAI,CAAC,uCAAuC,EAAE;UACzET,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QAEF,IAAIO,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;UAC3B,MAAMC,WAAU,GAAIH,QAAQ,CAACT,IAAI,CAACY,WAAW;;UAE7C;UACAC,QAAQ,CAACC,MAAK,GAAK,eAAcF,WAAY,4BAA2B;UAExE,MAAM;YAAEG,IAAI;YAAEC;UAAG,IAAIjB,UAAU,CAACa,WAAW,CAAC;UAC5CK,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEH,IAAI,CAAC;UAClCE,YAAY,CAACC,OAAO,CAAC,IAAI,EAAEF,EAAE,CAAC;UAC9B;UACA,IAAI,CAACG,MAAM,CAACC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC;UACpC,IAAI,CAACD,MAAM,CAACC,MAAM,CAAC,UAAU,EAAEL,IAAI,CAAC;UACpC;UACA,IAAIA,IAAG,KAAM,CAAC,EAAE;YACf,IAAI,CAACM,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;UAC5B,OAAO;YACL,IAAI,CAACD,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;UACjC;QACF;MACF,EAAE,OAAOC,KAAK,EAAE;QAChBC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpB,IAAIA,KAAK,CAACd,QAAO,IAAKc,KAAK,CAACd,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;UACvD,IAAI,CAACP,YAAW,GAAI,UAAS,GAAImB,KAAK,CAACd,QAAQ,CAACT,IAAI,CAACyB,OAAM;QAC7D,OAAO,IAAIF,KAAK,CAACd,QAAO,IAAKc,KAAK,CAACd,QAAQ,CAACE,MAAK,KAAM,GAAG,EAAE;UAC1D,IAAI,CAACP,YAAW,GAAI,2BAA2B;QACjD,OAAO;UACL,IAAI,CAACA,YAAW,GAAI,6BAA6B;QACnD;MAEA;IAOE;EACF;AAEE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}