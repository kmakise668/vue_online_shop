{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  \"aria-label\": \"breadcrumb\"\n};\nconst _hoisted_2 = {\n  class: \"flex space-x-2\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"text-purple-700\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"nav\", _hoisted_1, [_createElementVNode(\"ol\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.breadcrumbs, (breadcrumb, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [breadcrumb.link ? (_openBlock(), _createBlock(_component_router_link, {\n      key: 0,\n      to: breadcrumb.link,\n      class: \"after:content-['/'] after:ml-2 text-gray-600 hover:text-purple-700\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(breadcrumb.text), 1)]),\n      _: 2\n    }, 1032, [\"to\"])) : (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString(breadcrumb.text), 1))]);\n  }), 128))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$options","breadcrumbs","breadcrumb","index","key","link","_createBlock","_component_router_link","to","text","_hoisted_3","_toDisplayString"],"sources":["/Users/dev/Desktop/vue /src/components/v-breadcrumb.vue"],"sourcesContent":["<!-- <template>\n<nav aria-label=\"breadcrumb\">\n    <ol class=\"flex space-x-2\">\n        <li v-for=\"(breadcrumb, index) in breadcrumbs\" :key=\"index\">\n            <router-link v-if=\"breadcrumb.link\" :to=\"breadcrumb.link\" class=\"after:content-['/'] after:ml-2 text-gray-600 hover:text-purple-700\">\n                {{ breadcrumb.text }}\n            </router-link>\n            <span v-else class=\"text-purple-700\">{{ breadcrumb.text }}</span>\n        </li>\n    </ol>\n</nav>\n</template>\n\n<script>\nexport default {\n    name: 'v-breadcrumb',\n    computed: {\n        breadcrumbs() {\n            const route = this.$route;\n            const pathSegments = route.path.split(\"/\").filter((segment) => segment !== \"\");\n            const breadcrumbs = pathSegments.map((segment, index) => {\n                // Если текущий сегмент пути - это id продукта (число), не включаем его в хлебные крошки\n                if (!isNaN(Number(segment)) && index === pathSegments.length - 1) {\n                    return {\n                        text: \"\"\n                    };\n                }\n\n                const link = `/${pathSegments.slice(0, index + 1).join(\"/\")}`;\n                const routeName = pathSegments[index]; // Используем текущий сегмент пути для получения названия маршрута\n                const mappedRouteName = this.mapRouteName(routeName) || routeName;\n                return {\n                    text: mappedRouteName,\n                    link: index === pathSegments.length - 1 ? null : link,\n                };\n            });\n            return breadcrumbs;\n        },\n    },\n    methods: {\n        mapRouteName(routeName) {\n            // Замените английские названия на русские\n            const routeMappings = {\n                home: 'Главная страница',\n                catalog: 'Каталог',\n\n            };\n\n            return routeMappings[routeName];\n        },\n    },\n};\n</script>\n-->\n<template>\n    <nav aria-label=\"breadcrumb\">\n      <ol class=\"flex space-x-2\">\n        <li v-for=\"(breadcrumb, index) in breadcrumbs\" :key=\"index\">\n          <router-link v-if=\"breadcrumb.link\" :to=\"breadcrumb.link\" class=\"after:content-['/'] after:ml-2 text-gray-600 hover:text-purple-700\">\n            {{ breadcrumb.text }}\n          </router-link>\n          <span v-else class=\"text-purple-700\">{{ breadcrumb.text }}</span>\n        </li>\n      </ol>\n    </nav>\n  </template>\n  \n  <script>\n  export default {\n    name: 'v-breadcrumb',\n    props: {\n      productName: {\n        type: String,\n        default: '',\n      },\n    },\n    computed: {\n      breadcrumbs() {\n        const route = this.$route;\n        const pathSegments = route.path.split('/').filter((segment) => segment !== '');\n        const breadcrumbs = pathSegments.map((segment, index) => {\n          // Если текущий сегмент пути - это id продукта (число), не включаем его в хлебные крошки\n          if (index === pathSegments.length - 1 && !isNaN(Number(segment))) {\n            return { text: '', link: null };\n          }\n  \n          const link = `/${pathSegments.slice(0, index + 1).join('/')}`;\n          const routeName = pathSegments[index]; // Используем текущий сегмент пути для получения названия маршрута\n          const mappedRouteName = this.mapRouteName(routeName) || routeName;\n          return {\n            text: mappedRouteName,\n            link: index === pathSegments.length - 1 ? null : link,\n          };\n        });\n  \n        // Заменяем последние два элемента на название продукта\n        breadcrumbs.splice(-2, 2, { text: this.productName, link: null });\n  \n        return breadcrumbs;\n      },\n    },\n    methods: {\n      mapRouteName(routeName) {\n        // Замените английские названия на русские\n        const routeMappings = {\n          home: 'Главная страница',\n          catalog: 'Каталог',\n        };\n  \n        // Возвращаем русское название маршрута, если оно есть в routeMappings\n        return routeMappings[routeName];\n      },\n    },\n  };\n  </script>\n  "],"mappings":";;EAuDS,YAAU,EAAC;AAAY;;EACtBA,KAAK,EAAC;AAAgB;;;EAKTA,KAAK,EAAC;;;;uBANzBC,mBAAA,CASM,OATNC,UASM,GARJC,mBAAA,CAOK,MAPLC,UAOK,I,kBANHH,mBAAA,CAKKI,SAAA,QAAAC,WAAA,CAL6BC,QAAA,CAAAC,WAAW,GAAjCC,UAAU,EAAEC,KAAK;yBAA7BT,mBAAA,CAKK;MAL2CU,GAAG,EAAED;IAAK,IACrCD,UAAU,CAACG,IAAI,I,cAAlCC,YAAA,CAEcC,sBAAA;;MAFuBC,EAAE,EAAEN,UAAU,CAACG,IAAI;MAAEZ,KAAK,EAAC;;wBAC9D,MAAqB,C,kCAAlBS,UAAU,CAACO,IAAI,M;;uCAEpBf,mBAAA,CAAiE,QAAjEgB,UAAiE,EAAAC,gBAAA,CAAzBT,UAAU,CAACO,IAAI,O"},"metadata":{},"sourceType":"module","externalDependencies":[]}