{"ast":null,"code":"import axios from 'axios';\nimport { mapGetters } from 'vuex';\nimport vNotifications from \"@/components/notif/v-notifications.vue\";\nexport default {\n  components: {\n    vNotifications\n  },\n  data() {\n    return {\n      oldPassword: '',\n      newPassword: '',\n      message: '',\n      formSubmitted: false\n    };\n  },\n  methods: {\n    async changePassword() {\n      // Устанавливаем флаг formSubmitted в true при отправке формы\n      this.formSubmitted = true;\n\n      // Проверка, что оба поля заполнены перед отправкой\n      if (!this.oldPassword || !this.newPassword) {\n        this.message = 'Заполните оба поля.';\n        return;\n      }\n      try {\n        // Отправьте запрос на сервер, чтобы проверить старый пароль\n        const userId = parseInt(localStorage.getItem('id'), 10);\n        const response = await axios.post('http://localhost:7676/api/users/check-password', {\n          oldPassword: this.oldPassword,\n          userId\n        });\n\n        // Если старый пароль верен, отправьте запрос на обновление пароля\n        if (response.data.valid) {\n          await axios.put('http://localhost:7676/api/users/update-password', {\n            newPassword: this.newPassword,\n            userId\n          });\n          this.$store.dispatch(\"addNotification\", {\n            type: \"success\",\n            text: \"Успех\",\n            description: \"Пароль успешно изменен.\"\n          });\n\n          // Очистите поля ввода\n          this.oldPassword = '';\n          this.newPassword = '';\n        } else {\n          this.$store.dispatch(\"addNotification\", {\n            type: \"error\",\n            text: \"Ошибка\",\n            description: \"Старый пароль неверный.\"\n          });\n        }\n      } catch (error) {\n        console.error(error);\n        this.$store.dispatch(\"addNotification\", {\n          type: \"error\",\n          text: \"Ошибка\",\n          description: \"Внутренняя ошибка приложения.\"\n        });\n      }\n    }\n  },\n  computed: {\n    ...mapGetters('notifications', ['getNotifications']),\n    notifications() {\n      return this.getNotifications;\n    }\n  }\n};","map":{"version":3,"names":["axios","mapGetters","vNotifications","components","data","oldPassword","newPassword","message","formSubmitted","methods","changePassword","userId","parseInt","localStorage","getItem","response","post","valid","put","$store","dispatch","type","text","description","error","console","computed","notifications","getNotifications"],"sources":["/Users/dev/Desktop/vue /src/components/dashboard/v-update-password.vue"],"sourcesContent":["<template>\n    <form @submit.prevent=\"changePassword\">\n      <div>\n        <label for=\"oldPassword\">Старый пароль:</label>\n        <input type=\"password\" id=\"oldPassword\" v-model=\"oldPassword\" />\n  \n      </div>\n      <div>\n        <label for=\"newPassword\">Новый пароль:</label>\n        <input type=\"password\" id=\"newPassword\" v-model=\"newPassword\" />\n    \n      </div>\n\n    <button type=\"submit\" >Сменить пароль</button>\n\n\n    <p class=\"text-red-500 mt-6\" v-if=\"formSubmitted\">{{ message }}</p>\n    <v-notifications />\n    </form>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  import { mapGetters } from 'vuex';\n  import vNotifications from \"@/components/notif/v-notifications.vue\";\n\n  export default {\n    components: {\n        vNotifications, \n    },\n    data() {\n      return {\n        oldPassword: '',\n        newPassword: '',\n        message:'',\n        formSubmitted: false, \n       \n      };\n    },\n    methods: {\n        async changePassword() {\n      // Устанавливаем флаг formSubmitted в true при отправке формы\n      this.formSubmitted = true;\n\n      // Проверка, что оба поля заполнены перед отправкой\n      if (!this.oldPassword || !this.newPassword) {\n       this.message = 'Заполните оба поля.'\n        return;\n      }\n\n      try {\n        // Отправьте запрос на сервер, чтобы проверить старый пароль\n        const userId = parseInt(localStorage.getItem('id'), 10);\n        const response = await axios.post('http://localhost:7676/api/users/check-password', {\n          oldPassword: this.oldPassword,\n          userId,\n        });\n\n        // Если старый пароль верен, отправьте запрос на обновление пароля\n        if (response.data.valid) {\n          await axios.put('http://localhost:7676/api/users/update-password', {\n            newPassword: this.newPassword,\n            userId,\n          });\n\n          this.$store.dispatch(\"addNotification\", {\n            type: \"success\", \n            text: \"Успех\",\n            description: \"Пароль успешно изменен.\",\n            });\n\n          // Очистите поля ввода\n          this.oldPassword = '';\n          this.newPassword = '';\n        } else {\n            this.$store.dispatch(\"addNotification\", {\n            type: \"error\", \n            text: \"Ошибка\",\n            description: \"Старый пароль неверный.\",\n            });\n        }\n      } catch (error) {\n        console.error(error);\n        this.$store.dispatch(\"addNotification\", {\n            type: \"error\", \n            text: \"Ошибка\",\n            description: \"Внутренняя ошибка приложения.\",\n            });\n      }\n    },\n    },\n    computed: {\n    ...mapGetters('notifications', ['getNotifications']),\n    notifications() {\n      return this.getNotifications;\n    },\n}\n  };\n  </script>\n  "],"mappings":"AAsBE,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,UAAS,QAAS,MAAM;AACjC,OAAOC,cAAa,MAAO,wCAAwC;AAEnE,eAAe;EACbC,UAAU,EAAE;IACRD;EACJ,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,WAAW,EAAE,EAAE;MACfC,OAAO,EAAC,EAAE;MACVC,aAAa,EAAE;IAEjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,cAAcA,CAAA,EAAG;MACzB;MACA,IAAI,CAACF,aAAY,GAAI,IAAI;;MAEzB;MACA,IAAI,CAAC,IAAI,CAACH,WAAU,IAAK,CAAC,IAAI,CAACC,WAAW,EAAE;QAC3C,IAAI,CAACC,OAAM,GAAI,qBAAoB;QAClC;MACF;MAEA,IAAI;QACF;QACA,MAAMI,MAAK,GAAIC,QAAQ,CAACC,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;QACvD,MAAMC,QAAO,GAAI,MAAMf,KAAK,CAACgB,IAAI,CAAC,gDAAgD,EAAE;UAClFX,WAAW,EAAE,IAAI,CAACA,WAAW;UAC7BM;QACF,CAAC,CAAC;;QAEF;QACA,IAAII,QAAQ,CAACX,IAAI,CAACa,KAAK,EAAE;UACvB,MAAMjB,KAAK,CAACkB,GAAG,CAAC,iDAAiD,EAAE;YACjEZ,WAAW,EAAE,IAAI,CAACA,WAAW;YAC7BK;UACF,CAAC,CAAC;UAEF,IAAI,CAACQ,MAAM,CAACC,QAAQ,CAAC,iBAAiB,EAAE;YACtCC,IAAI,EAAE,SAAS;YACfC,IAAI,EAAE,OAAO;YACbC,WAAW,EAAE;UACb,CAAC,CAAC;;UAEJ;UACA,IAAI,CAAClB,WAAU,GAAI,EAAE;UACrB,IAAI,CAACC,WAAU,GAAI,EAAE;QACvB,OAAO;UACH,IAAI,CAACa,MAAM,CAACC,QAAQ,CAAC,iBAAiB,EAAE;YACxCC,IAAI,EAAE,OAAO;YACbC,IAAI,EAAE,QAAQ;YACdC,WAAW,EAAE;UACb,CAAC,CAAC;QACN;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;QACpB,IAAI,CAACL,MAAM,CAACC,QAAQ,CAAC,iBAAiB,EAAE;UACpCC,IAAI,EAAE,OAAO;UACbC,IAAI,EAAE,QAAQ;UACdC,WAAW,EAAE;QACb,CAAC,CAAC;MACR;IACF;EACA,CAAC;EACDG,QAAQ,EAAE;IACV,GAAGzB,UAAU,CAAC,eAAe,EAAE,CAAC,kBAAkB,CAAC,CAAC;IACpD0B,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACC,gBAAgB;IAC9B;EACJ;AACE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}