{"ast":null,"code":"import jwt_decode from 'jwt-decode';\nexport default {\n  mounted() {\n    // При монтировании каждого компонента проверяем наличие токена в куках\n    const accessToken = this.getCookieValue('accessToken');\n    if (accessToken) {\n      this.$store.commit('SET_AUTH', true); // Устанавливаем состояние аутентификации\n      const {\n        role\n      } = jwt_decode(accessToken); // Расшифровываем токен и получаем роль\n      this.$store.commit('SET_ROLE', role); // Устанавливаем роль\n    } else {\n      this.$store.commit('SET_AUTH', false); // Если токена нет, снимаем состояние аутентификации\n      this.$store.commit('SET_ROLE', null); // Сбрасываем роль\n    }\n  },\n\n  methods: {\n    getCookieValue(name) {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n        const cookie = cookies[i].trim();\n        if (cookie.startsWith(`${name}=`)) {\n          return cookie.substring(name.length + 1);\n        }\n      }\n      return null;\n    }\n  }\n};","map":{"version":3,"names":["jwt_decode","mounted","accessToken","getCookieValue","$store","commit","role","methods","name","cookies","document","cookie","split","i","length","trim","startsWith","substring"],"sources":["/Users/dev/Desktop/vue /src/authMixin.js"],"sourcesContent":["import jwt_decode from 'jwt-decode';\n\nexport default {\n    mounted() {\n        // При монтировании каждого компонента проверяем наличие токена в куках\n        const accessToken = this.getCookieValue('accessToken');\n        if (accessToken) {\n            this.$store.commit('SET_AUTH', true); // Устанавливаем состояние аутентификации\n            const { role } = jwt_decode(accessToken); // Расшифровываем токен и получаем роль\n            this.$store.commit('SET_ROLE', role); // Устанавливаем роль\n        } else {\n            this.$store.commit('SET_AUTH', false); // Если токена нет, снимаем состояние аутентификации\n            this.$store.commit('SET_ROLE', null); // Сбрасываем роль\n        }\n    },\n    methods: {\n        getCookieValue(name) {\n            const cookies = document.cookie.split(';');\n            for (let i = 0; i < cookies.length; i++) {\n                const cookie = cookies[i].trim();\n                if (cookie.startsWith(`${name}=`)) {\n                    return cookie.substring(name.length + 1);\n                }\n            }\n            return null;\n        }\n    }\n};"],"mappings":"AAAA,OAAOA,UAAU,MAAM,YAAY;AAEnC,eAAe;EACXC,OAAOA,CAAA,EAAG;IACN;IACA,MAAMC,WAAW,GAAG,IAAI,CAACC,cAAc,CAAC,aAAa,CAAC;IACtD,IAAID,WAAW,EAAE;MACb,IAAI,CAACE,MAAM,CAACC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;MACtC,MAAM;QAAEC;MAAK,CAAC,GAAGN,UAAU,CAACE,WAAW,CAAC,CAAC,CAAC;MAC1C,IAAI,CAACE,MAAM,CAACC,MAAM,CAAC,UAAU,EAAEC,IAAI,CAAC,CAAC,CAAC;IAC1C,CAAC,MAAM;MACH,IAAI,CAACF,MAAM,CAACC,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC;MACvC,IAAI,CAACD,MAAM,CAACC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;IAC1C;EACJ,CAAC;;EACDE,OAAO,EAAE;IACLJ,cAAcA,CAACK,IAAI,EAAE;MACjB,MAAMC,OAAO,GAAGC,QAAQ,CAACC,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC;MAC1C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,OAAO,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;QACrC,MAAMF,MAAM,GAAGF,OAAO,CAACI,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;QAChC,IAAIJ,MAAM,CAACK,UAAU,CAAE,GAAER,IAAK,GAAE,CAAC,EAAE;UAC/B,OAAOG,MAAM,CAACM,SAAS,CAACT,IAAI,CAACM,MAAM,GAAG,CAAC,CAAC;QAC5C;MACJ;MACA,OAAO,IAAI;IACf;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}