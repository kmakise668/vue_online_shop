{"ast":null,"code":"import { mapGetters, mapActions } from \"vuex\";\nimport { XIcon, CheckCircleIcon, ExclamationCircleIcon } from \"@heroicons/vue/outline\";\nexport default {\n  name: \"v-notifications\",\n  components: {\n    XIcon,\n    CheckCircleIcon,\n    ExclamationCircleIcon\n  },\n  computed: {\n    ...mapGetters([\"getNotifications\"]),\n    notifications() {\n      return this.getNotifications;\n    }\n  },\n  methods: {\n    ...mapActions([\"removeNotification\"])\n  },\n  watch: {\n    notifications: {\n      handler(newNotifications) {\n        // Добавляем слежение за уведомлениями и удаляем их через 2 секунды после добавления\n        newNotifications.forEach(notification => {\n          setTimeout(() => {\n            this.removeNotification(notification);\n          }, 2000); // 2000 миллисекунд (2 секунды)\n        });\n      },\n\n      deep: true\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","mapActions","XIcon","CheckCircleIcon","ExclamationCircleIcon","name","components","computed","notifications","getNotifications","methods","watch","handler","newNotifications","forEach","notification","setTimeout","removeNotification","deep"],"sources":["/Users/dev/Desktop/vue /src/components/notif/v-notifications.vue"],"sourcesContent":["<!-- <template>\n  <div class=\"fixed bottom-5 right-5\">\n    <transition-group name=\"slide-right\">\n      <div\n        v-for=\"(notification, index) in notifications\"\n        :key=\"index\"\n        :style=\"{ transitionDelay: `${index * 100}ms` }\"\n        class=\"relative mt-3\"\n      >\n        <div\n          class=\"bg-white p-4 pr-8 shadow-md flex items-center rounded-lg\"\n        >\n          <div\n            class=\"w-10 h-10 rounded-md flex items-center justify-center\"\n            :class=\"{ 'bg-lime-500': notification.type === 'success', 'bg-rose-500': notification.type === 'error' }\"\n          >\n          <template v-if=\"notification.type === 'success'\">\n              <CheckCircleIcon class=\"w-7 h-7 text-white\" />\n            </template>\n            <template v-else>\n              <ExclamationCircleIcon class=\"w-7 h-7 text-white\" />\n            </template>\n          </div>\n          <div class=\"ml-4 mr-20\">\n          \n                <div>\n                  <router-link v-if=\"notification.link\" :to=\"notification.link\" class=\"font-semibold text-sm\">\n                    {{ notification.text }}\n                  </router-link>\n                  <span v-else>{{ notification.text }}</span>\n                </div>\n\n      \n            <div class=\"text-xs text-gray-500\">{{ notification.description }}</div>\n          </div>\n          <button\n            @click=\"removeNotification(notification)\"\n            class=\"absolute top-5 right-5 text-gray-500 hover:text-gray-700\"\n          >\n            <XIcon class=\"w-5 h-5 text-black-300 hover:text-red-700\" />\n          </button>\n        </div>\n      </div>\n    </transition-group>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from \"vuex\";\nimport { XIcon,  CheckCircleIcon,  ExclamationCircleIcon } from \"@heroicons/vue/outline\";\n\nexport default {\n  name: \"v-notifications\",\n  components: {\n    XIcon, CheckCircleIcon,  ExclamationCircleIcon\n  },\n  computed: {\n    ...mapGetters([\"getNotifications\"]),\n    notifications() {\n      return this.getNotifications;\n    },\n  },\n  methods: {\n    ...mapActions([\"removeNotification\"]),\n    // Добавьте метод для автоматического удаления уведомлений через 2 секунды\n    removeNotificationWithDelay(notification) {\n      setTimeout(() => {\n        this.removeNotification(notification);\n      }, 2000); // 2000 миллисекунд (2 секунды)\n    }\n  },\n  // Добавьте хук mounted, чтобы автоматически удалять уведомления\n  mounted() {\n    this.notifications.forEach(notification => {\n      this.removeNotificationWithDelay(notification);\n    });\n  },\n};\n</script> -->\n<template>\n  <div class=\"fixed bottom-5 right-5\">\n    <transition-group name=\"slide-right\">\n      <div\n        v-for=\"(notification, index) in notifications\"\n        :key=\"index\"\n        :style=\"{ transitionDelay: `${index * 100}ms` }\"\n        class=\"relative mt-3\"\n      >\n        <div\n          class=\"bg-white p-4 pr-8 shadow-md flex items-center rounded-lg\"\n        >\n          <div\n            class=\"w-10 h-10 rounded-md flex items-center justify-center\"\n            :class=\"{ 'bg-lime-500': notification.type === 'success', 'bg-rose-500': notification.type === 'error' }\"\n          >\n            <template v-if=\"notification.type === 'success'\">\n              <CheckCircleIcon class=\"w-7 h-7 text-white\" />\n            </template>\n            <template v-else>\n              <ExclamationCircleIcon class=\"w-7 h-7 text-white\" />\n            </template>\n          </div>\n          <div class=\"ml-4 mr-20\">\n            <div>\n              <router-link v-if=\"notification.link\" :to=\"notification.link\" class=\"font-semibold text-sm\">\n                {{ notification.text }}\n              </router-link>\n              <span v-else>{{ notification.text }}</span>\n            </div>\n            <div class=\"text-xs text-gray-500\">{{ notification.description }}</div>\n          </div>\n          <button\n            @click=\"removeNotification(notification)\"\n            class=\"absolute top-5 right-5 text-gray-500 hover:text-gray-700\"\n          >\n            <XIcon class=\"w-5 h-5 text-black-300 hover:text-red-700\" />\n          </button>\n        </div>\n      </div>\n    </transition-group>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from \"vuex\";\nimport { XIcon, CheckCircleIcon, ExclamationCircleIcon } from \"@heroicons/vue/outline\";\n\nexport default {\n  name: \"v-notifications\",\n  components: {\n    XIcon, CheckCircleIcon, ExclamationCircleIcon\n  },\n  computed: {\n    ...mapGetters([\"getNotifications\"]),\n    notifications() {\n      return this.getNotifications;\n    },\n  },\n  methods: {\n    ...mapActions([\"removeNotification\"]),\n  },\n  watch: {\n    notifications: {\n      handler(newNotifications) {\n        // Добавляем слежение за уведомлениями и удаляем их через 2 секунды после добавления\n        newNotifications.forEach((notification) => {\n          setTimeout(() => {\n            this.removeNotification(notification);\n          }, 2000); // 2000 миллисекунд (2 секунды)\n        });\n      },\n      deep: true,\n    },\n  },\n};\n</script>\n"],"mappings":"AA4HA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAM;AAC7C,SAASC,KAAK,EAAEC,eAAe,EAAEC,qBAAoB,QAAS,wBAAwB;AAEtF,eAAe;EACbC,IAAI,EAAE,iBAAiB;EACvBC,UAAU,EAAE;IACVJ,KAAK;IAAEC,eAAe;IAAEC;EAC1B,CAAC;EACDG,QAAQ,EAAE;IACR,GAAGP,UAAU,CAAC,CAAC,kBAAkB,CAAC,CAAC;IACnCQ,aAAaA,CAAA,EAAG;MACd,OAAO,IAAI,CAACC,gBAAgB;IAC9B;EACF,CAAC;EACDC,OAAO,EAAE;IACP,GAAGT,UAAU,CAAC,CAAC,oBAAoB,CAAC;EACtC,CAAC;EACDU,KAAK,EAAE;IACLH,aAAa,EAAE;MACbI,OAAOA,CAACC,gBAAgB,EAAE;QACxB;QACAA,gBAAgB,CAACC,OAAO,CAAEC,YAAY,IAAK;UACzCC,UAAU,CAAC,MAAM;YACf,IAAI,CAACC,kBAAkB,CAACF,YAAY,CAAC;UACvC,CAAC,EAAE,IAAI,CAAC,EAAE;QACZ,CAAC,CAAC;MACJ,CAAC;;MACDG,IAAI,EAAE;IACR;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}