{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, normalizeStyle as _normalizeStyle, TransitionGroup as _TransitionGroup } from \"vue\";\nconst _hoisted_1 = {\n  class: \"fixed bottom-5 right-5\"\n};\nconst _hoisted_2 = {\n  class: \"bg-white p-4 pr-8 shadow-md flex items-center rounded-lg\"\n};\nconst _hoisted_3 = {\n  class: \"ml-4 mr-20\"\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  class: \"text-xs text-gray-500\"\n};\nconst _hoisted_6 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CheckCircleIcon = _resolveComponent(\"CheckCircleIcon\");\n  const _component_ExclamationCircleIcon = _resolveComponent(\"ExclamationCircleIcon\");\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_XIcon = _resolveComponent(\"XIcon\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_TransitionGroup, {\n    name: \"slide-right\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.notifications, (notification, index) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: index,\n        style: _normalizeStyle({\n          transitionDelay: `${index * 100}ms`\n        }),\n        class: \"relative mt-3\"\n      }, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n        class: _normalizeClass([\"w-10 h-10 rounded-md flex items-center justify-center\", {\n          'bg-lime-500': notification.type === 'success',\n          'bg-rose-500': notification.type === 'error'\n        }])\n      }, [notification.type === 'success' ? (_openBlock(), _createBlock(_component_CheckCircleIcon, {\n        key: 0,\n        class: \"w-7 h-7 text-white\"\n      })) : (_openBlock(), _createBlock(_component_ExclamationCircleIcon, {\n        key: 1,\n        class: \"w-7 h-7 text-white\"\n      }))], 2), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", null, [notification.link ? (_openBlock(), _createBlock(_component_router_link, {\n        key: 0,\n        to: notification.link,\n        class: \"font-semibold text-sm\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(notification.text), 1)]),\n        _: 2\n      }, 1032, [\"to\"])) : (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString(notification.text), 1))]), _createElementVNode(\"div\", _hoisted_5, _toDisplayString(notification.description), 1)]), _createElementVNode(\"button\", {\n        onClick: $event => _ctx.removeNotification(notification),\n        class: \"absolute top-5 right-5 text-gray-500 hover:text-gray-700\"\n      }, [_createVNode(_component_XIcon, {\n        class: \"w-5 h-5 text-black-300 hover:text-red-700\"\n      })], 8, _hoisted_6)])], 4);\n    }), 128))]),\n    _: 1\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_TransitionGroup","name","_Fragment","_renderList","$options","notifications","notification","index","key","style","_normalizeStyle","transitionDelay","_createElementVNode","_hoisted_2","_normalizeClass","type","_createBlock","_component_CheckCircleIcon","_component_ExclamationCircleIcon","_hoisted_3","link","_component_router_link","to","text","_hoisted_4","_toDisplayString","_hoisted_5","description","onClick","$event","_ctx","removeNotification","_component_XIcon"],"sources":["/Users/dev/Desktop/vue /src/components/notif/v-notifications.vue"],"sourcesContent":["<!-- <template>\n  <div class=\"fixed bottom-5 right-5\">\n    <transition-group name=\"slide-right\">\n      <div\n        v-for=\"(notification, index) in notifications\"\n        :key=\"index\"\n        :style=\"{ transitionDelay: `${index * 100}ms` }\"\n        class=\"relative mt-3\"\n      >\n        <div\n          class=\"bg-white p-4 pr-8 shadow-md flex items-center rounded-lg\"\n        >\n          <div\n            class=\"w-10 h-10 rounded-md flex items-center justify-center\"\n            :class=\"{ 'bg-lime-500': notification.type === 'success', 'bg-rose-500': notification.type === 'error' }\"\n          >\n          <template v-if=\"notification.type === 'success'\">\n              <CheckCircleIcon class=\"w-7 h-7 text-white\" />\n            </template>\n            <template v-else>\n              <ExclamationCircleIcon class=\"w-7 h-7 text-white\" />\n            </template>\n          </div>\n          <div class=\"ml-4 mr-20\">\n          \n                <div>\n                  <router-link v-if=\"notification.link\" :to=\"notification.link\" class=\"font-semibold text-sm\">\n                    {{ notification.text }}\n                  </router-link>\n                  <span v-else>{{ notification.text }}</span>\n                </div>\n\n      \n            <div class=\"text-xs text-gray-500\">{{ notification.description }}</div>\n          </div>\n          <button\n            @click=\"removeNotification(notification)\"\n            class=\"absolute top-5 right-5 text-gray-500 hover:text-gray-700\"\n          >\n            <XIcon class=\"w-5 h-5 text-black-300 hover:text-red-700\" />\n          </button>\n        </div>\n      </div>\n    </transition-group>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from \"vuex\";\nimport { XIcon,  CheckCircleIcon,  ExclamationCircleIcon } from \"@heroicons/vue/outline\";\n\nexport default {\n  name: \"v-notifications\",\n  components: {\n    XIcon, CheckCircleIcon,  ExclamationCircleIcon\n  },\n  computed: {\n    ...mapGetters([\"getNotifications\"]),\n    notifications() {\n      return this.getNotifications;\n    },\n  },\n  methods: {\n    ...mapActions([\"removeNotification\"]),\n    // Добавьте метод для автоматического удаления уведомлений через 2 секунды\n    removeNotificationWithDelay(notification) {\n      setTimeout(() => {\n        this.removeNotification(notification);\n      }, 2000); // 2000 миллисекунд (2 секунды)\n    }\n  },\n  // Добавьте хук mounted, чтобы автоматически удалять уведомления\n  mounted() {\n    this.notifications.forEach(notification => {\n      this.removeNotificationWithDelay(notification);\n    });\n  },\n};\n</script> -->\n<template>\n  <div class=\"fixed bottom-5 right-5\">\n    <transition-group name=\"slide-right\">\n      <div\n        v-for=\"(notification, index) in notifications\"\n        :key=\"index\"\n        :style=\"{ transitionDelay: `${index * 100}ms` }\"\n        class=\"relative mt-3\"\n      >\n        <div\n          class=\"bg-white p-4 pr-8 shadow-md flex items-center rounded-lg\"\n        >\n          <div\n            class=\"w-10 h-10 rounded-md flex items-center justify-center\"\n            :class=\"{ 'bg-lime-500': notification.type === 'success', 'bg-rose-500': notification.type === 'error' }\"\n          >\n            <template v-if=\"notification.type === 'success'\">\n              <CheckCircleIcon class=\"w-7 h-7 text-white\" />\n            </template>\n            <template v-else>\n              <ExclamationCircleIcon class=\"w-7 h-7 text-white\" />\n            </template>\n          </div>\n          <div class=\"ml-4 mr-20\">\n            <div>\n              <router-link v-if=\"notification.link\" :to=\"notification.link\" class=\"font-semibold text-sm\">\n                {{ notification.text }}\n              </router-link>\n              <span v-else>{{ notification.text }}</span>\n            </div>\n            <div class=\"text-xs text-gray-500\">{{ notification.description }}</div>\n          </div>\n          <button\n            @click=\"removeNotification(notification)\"\n            class=\"absolute top-5 right-5 text-gray-500 hover:text-gray-700\"\n          >\n            <XIcon class=\"w-5 h-5 text-black-300 hover:text-red-700\" />\n          </button>\n        </div>\n      </div>\n    </transition-group>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from \"vuex\";\nimport { XIcon, CheckCircleIcon, ExclamationCircleIcon } from \"@heroicons/vue/outline\";\n\nexport default {\n  name: \"v-notifications\",\n  components: {\n    XIcon, CheckCircleIcon, ExclamationCircleIcon\n  },\n  computed: {\n    ...mapGetters([\"getNotifications\"]),\n    notifications() {\n      return this.getNotifications;\n    },\n  },\n  methods: {\n    ...mapActions([\"removeNotification\"]),\n  },\n  watch: {\n    notifications: {\n      handler(newNotifications) {\n        // Добавляем слежение за уведомлениями и удаляем их через 2 секунды после добавления\n        newNotifications.forEach((notification) => {\n          setTimeout(() => {\n            this.removeNotification(notification);\n          }, 2000); // 2000 миллисекунд (2 секунды)\n        });\n      },\n      deep: true,\n    },\n  },\n};\n</script>\n"],"mappings":";;EAgFOA,KAAK,EAAC;AAAwB;;EAS3BA,KAAK,EAAC;AAA0D;;EAa3DA,KAAK,EAAC;AAAY;;;;;EAOhBA,KAAK,EAAC;AAAuB;;;;;;;uBA7B5CC,mBAAA,CAwCM,OAxCNC,UAwCM,GAvCJC,YAAA,CAsCmBC,gBAAA;IAtCDC,IAAI,EAAC;EAAa;sBAEhC,MAA8C,E,kBADhDJ,mBAAA,CAoCMK,SAAA,QAAAC,WAAA,CAnC4BC,QAAA,CAAAC,aAAa,GAArCC,YAAY,EAAEC,KAAK;2BAD7BV,mBAAA,CAoCM;QAlCHW,GAAG,EAAED,KAAK;QACVE,KAAK,EAAAC,eAAA;UAAAC,eAAA,KAAwBJ,KAAK;QAAA;QACnCX,KAAK,EAAC;UAENgB,mBAAA,CA6BM,OA7BNC,UA6BM,GA1BJD,mBAAA,CAUM;QATJhB,KAAK,EAAAkB,eAAA,EAAC,uDAAuD;UAAA,eACpCR,YAAY,CAACS,IAAI;UAAA,eAA+BT,YAAY,CAACS,IAAI;QAAA;UAE1ET,YAAY,CAACS,IAAI,kB,cAC/BC,YAAA,CAA8CC,0BAAA;;QAA7BrB,KAAK,EAAC;2BAGvBoB,YAAA,CAAoDE,gCAAA;;QAA7BtB,KAAK,EAAC;gBAGjCgB,mBAAA,CAQM,OARNO,UAQM,GAPJP,mBAAA,CAKM,cAJeN,YAAY,CAACc,IAAI,I,cAApCJ,YAAA,CAEcK,sBAAA;;QAFyBC,EAAE,EAAEhB,YAAY,CAACc,IAAI;QAAExB,KAAK,EAAC;;0BAClE,MAAuB,C,kCAApBU,YAAY,CAACiB,IAAI,M;;yCAEtB1B,mBAAA,CAA2C,QAAA2B,UAAA,EAAAC,gBAAA,CAA3BnB,YAAY,CAACiB,IAAI,O,GAEnCX,mBAAA,CAAuE,OAAvEc,UAAuE,EAAAD,gBAAA,CAAjCnB,YAAY,CAACqB,WAAW,M,GAEhEf,mBAAA,CAKS;QAJNgB,OAAK,EAAAC,MAAA,IAAEC,IAAA,CAAAC,kBAAkB,CAACzB,YAAY;QACvCV,KAAK,EAAC;UAENG,YAAA,CAA2DiC,gBAAA;QAApDpC,KAAK,EAAC;MAA2C,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}