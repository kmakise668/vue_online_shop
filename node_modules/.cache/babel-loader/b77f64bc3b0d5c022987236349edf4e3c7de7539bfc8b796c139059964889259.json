{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport store from '@/vuex/store';\nimport vHome from '@/components/v-home';\nimport vCatalog from '@/components/catalog/v-catalog';\nimport vCart from '@/components/cart/v-cart';\n// import vDashboard from '@/components/dashboard/v-dashboard'\nimport vLogin from '@/components/login/v-login';\nimport vRegister from '@/components/register/v-register';\nimport vProductSingle from '@/components/product/v-product-single';\nimport vOrder from '@/components/order/v-order';\nimport NotFound from '@/components/error-page/404';\nconst routes = [{\n  path: '/',\n  name: 'home',\n  component: vHome,\n  meta: {\n    breadcrumb: 'Главная страница'\n  }\n}, {\n  path: '/catalog',\n  name: 'catalog',\n  component: vCatalog,\n  meta: {\n    breadcrumb: 'Catalog'\n  }\n}, {\n  path: '/catalog/:slug/:id',\n  name: 'product-single',\n  component: vProductSingle,\n  props: true,\n  meta: {\n    breadcrumb: route => {\n      return route.params.slug;\n    }\n  }\n}, {\n  path: '/cart',\n  name: 'cart',\n  component: vCart,\n  props: true,\n  meta: {\n    breadcrumb: 'Cart'\n  }\n}, {\n  path: '/admin',\n  name: 'Admin',\n  component: () => import('@/components/dashboard/v-dashboard'),\n  beforeEnter: (to, from, next) => {\n    if (store.state.isAuthenticated && store.state.role === 1) {\n      next();\n    } else {\n      next('/login');\n    }\n  }\n}, {\n  path: '/dashboard',\n  name: 'Dashboard',\n  component: () => import('@/components/v-home'),\n  beforeEnter: (to, from, next) => {\n    if (store.state.isAuthenticated && store.state.role !== 1) {\n      next();\n    } else {\n      next('/login');\n    }\n  }\n}, {\n  path: '/login',\n  name: 'login',\n  component: vLogin,\n  meta: {\n    breadcrumb: 'Login'\n  },\n  beforeEnter: (to, from, next) => {\n    if (store.state.isAuthenticated) {\n      // Если пользователь авторизован, перенаправляем в личный кабинет\n      if (store.state.role === 1) {\n        next('/admin');\n      } else {\n        next('/dashboard');\n      }\n    } else {\n      // Если пользователь не авторизован, позволяем доступ к странице входа\n      next();\n    }\n  }\n}, {\n  path: '/register',\n  name: 'register',\n  component: vRegister,\n  meta: {\n    breadcrumb: 'Register'\n  },\n  beforeEnter: (to, from, next) => {\n    if (store.state.isAuthenticated) {\n      // Если пользователь авторизован, перенаправляем в личный кабинет\n      if (store.state.role === 1) {\n        next('/admin');\n      } else {\n        next('/dashboard');\n      }\n    } else {\n      // Если пользователь не авторизован, позволяем доступ к странице входа\n      next();\n    }\n  }\n}, {\n  path: '/order',\n  name: 'order',\n  component: vOrder\n}, {\n  path: '/:pathMatch(.*)*',\n  name: 'not-found',\n  component: NotFound,\n  meta: {\n    skipAuthCheck: true\n  }\n}\n// { path: '/:pathMatch(.*)*', component: NotFound },\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","store","vHome","vCatalog","vCart","vLogin","vRegister","vProductSingle","vOrder","NotFound","routes","path","name","component","meta","breadcrumb","props","route","params","slug","beforeEnter","to","from","next","state","isAuthenticated","role","skipAuthCheck","router","history","process","env","BASE_URL"],"sources":["/Users/dev/Desktop/vue /src/router/router.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport store from '@/vuex/store';\nimport vHome from '@/components/v-home'\nimport vCatalog from '@/components/catalog/v-catalog'\nimport vCart from '@/components/cart/v-cart'\n// import vDashboard from '@/components/dashboard/v-dashboard'\nimport vLogin from '@/components/login/v-login'\nimport vRegister from '@/components/register/v-register'\nimport vProductSingle from '@/components/product/v-product-single'\nimport vOrder from '@/components/order/v-order'\nimport NotFound from '@/components/error-page/404'\n\n\nconst routes = [{\n        path: '/',\n        name: 'home',\n        component: vHome,\n        meta: { breadcrumb: 'Главная страница' },\n    },\n    {\n        path: '/catalog',\n        name: 'catalog',\n        component: vCatalog,\n        meta: { breadcrumb: 'Catalog' },\n    },\n    {\n        path: '/catalog/:slug/:id',\n        name: 'product-single',\n        component: vProductSingle,\n        props: true,\n        meta: {\n            breadcrumb: route => {\n                return route.params.slug;\n            },\n        },\n    },\n    {\n        path: '/cart',\n        name: 'cart',\n        component: vCart,\n        props: true,\n        meta: { breadcrumb: 'Cart' },\n    },\n    {\n        path: '/admin',\n        name: 'Admin',\n\n        component: () =>\n            import ('@/components/dashboard/v-dashboard'),\n        beforeEnter: (to, from, next) => {\n            if (store.state.isAuthenticated && store.state.role === 1) {\n                next();\n            } else {\n                next('/login');\n            }\n        },\n\n\n\n    },\n    {\n        path: '/dashboard',\n        name: 'Dashboard',\n\n        component: () =>\n            import ('@/components/v-home'),\n        beforeEnter: (to, from, next) => {\n            if (store.state.isAuthenticated && store.state.role !== 1) {\n                next();\n            } else {\n                next('/login');\n            }\n        },\n    },\n\n    {\n        path: '/login',\n        name: 'login',\n        component: vLogin,\n        meta: { breadcrumb: 'Login' },\n        beforeEnter: (to, from, next) => {\n            if (store.state.isAuthenticated) {\n                // Если пользователь авторизован, перенаправляем в личный кабинет\n                if (store.state.role === 1) {\n                    next('/admin');\n                } else {\n                    next('/dashboard');\n                }\n            } else {\n                // Если пользователь не авторизован, позволяем доступ к странице входа\n                next();\n            }\n        }\n    },\n    {\n        path: '/register',\n        name: 'register',\n        component: vRegister,\n        meta: { breadcrumb: 'Register' },\n        beforeEnter: (to, from, next) => {\n            if (store.state.isAuthenticated) {\n                // Если пользователь авторизован, перенаправляем в личный кабинет\n                if (store.state.role === 1) {\n                    next('/admin');\n                } else {\n                    next('/dashboard');\n                }\n            } else {\n                // Если пользователь не авторизован, позволяем доступ к странице входа\n                next();\n            }\n        }\n    },\n    {\n        path: '/order',\n        name: 'order',\n        component: vOrder,\n    },\n    {\n        path: '/:pathMatch(.*)*',\n        name: 'not-found',\n        component: NotFound,\n        meta: { skipAuthCheck: true }\n    }\n    // { path: '/:pathMatch(.*)*', component: NotFound },\n]\n\n\n\nconst router = createRouter({\n    history: createWebHistory(process.env.BASE_URL),\n    routes\n})\n\n\n\n\nexport default router;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}