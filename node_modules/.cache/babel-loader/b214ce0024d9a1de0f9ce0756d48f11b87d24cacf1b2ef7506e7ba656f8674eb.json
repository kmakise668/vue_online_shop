{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  GET_PRODUCTS_FROM_API({\n    commit\n  }) {\n    return axios.get('http://localhost:7676/api/products') // Используйте метод get для получения данных\n    .then(response => {\n      const products = response.data;\n      products.forEach(item => {\n        item.quantity = 1;\n      });\n      commit('SET_PRODUCTS_TO_STATE', products);\n      return products; // Возвращаем данные продуктов\n    }).catch(error => {\n      console.log(error);\n      throw error; // Пробрасываем ошибку для обработки в вызывающем коде\n    });\n  },\n\n  async addProduct({\n    commit,\n    dispatch\n  }, productData) {\n    try {\n      const response = await axios.post('http://localhost:7676/api/products', productData);\n      const newProduct = response.data;\n      commit('ADD_PRODUCT', newProduct); // Вызываем мутацию для добавления продукта в состояние\n      await dispatch('GET_PRODUCTS_FROM_API'); // Вызываем действие для обновления списка товаров\n      console.log('Товар успешно добавлен.');\n    } catch (error) {\n      console.error(error);\n    }\n  },\n  ADD_TO_CART({\n    commit\n  }, product) {\n    commit('SET_CART', product);\n  },\n  INCREMENT_CART_ITEM({\n    commit\n  }, index) {\n    commit('INCREMENT', index);\n  },\n  DECREMENT_CART_ITEM({\n    commit\n  }, index) {\n    commit('DECREMENT', index);\n  },\n  DELETE_FROM_CART({\n    commit\n  }, index) {\n    commit('REMOVE_FROM_CART', index);\n  },\n  async fetchUserData({\n    commit\n  }, userId) {\n    try {\n      const response = await axios.get(`http://localhost:7676/api/users/${userId}`);\n      commit('SET_USER', response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  },\n  logout() {\n    // Метод для выхода пользователя\n    // Удаление токена из локального хранилища\n    localStorage.removeItem('role');\n    // Сброс состояния авторизации и роли в Vuex хранилище\n    document.cookie = 'accessToken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n    document.cookie = 'refreshToken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n    this.$store.commit('SET_AUTH', false);\n    this.$store.commit('SET_ROLE', null);\n    this.$router.push('/login');\n  },\n  addNotification({\n    commit\n  }, notification) {\n    commit(\"ADD_NOTIFICATION\", notification);\n    // Здесь можно установить таймер для автоматического удаления уведомления через некоторое время\n  },\n\n  removeNotification({\n    commit\n  }, notification) {\n    commit(\"REMOVE_NOTIFICATION\", notification);\n  }\n};","map":{"version":3,"names":["axios","GET_PRODUCTS_FROM_API","commit","get","then","response","products","data","forEach","item","quantity","catch","error","console","log","addProduct","dispatch","productData","post","newProduct","ADD_TO_CART","product","INCREMENT_CART_ITEM","index","DECREMENT_CART_ITEM","DELETE_FROM_CART","fetchUserData","userId","logout","localStorage","removeItem","document","cookie","$store","$router","push","addNotification","notification","removeNotification"],"sources":["/Users/dev/Desktop/vue /src/vuex/actions/actions.js"],"sourcesContent":["import axios from 'axios';\n\nexport default {\n    GET_PRODUCTS_FROM_API({ commit }) {\n        return axios\n            .get('http://localhost:7676/api/products') // Используйте метод get для получения данных\n            .then((response) => {\n                const products = response.data;\n                products.forEach((item) => {\n                    item.quantity = 1;\n                });\n                commit('SET_PRODUCTS_TO_STATE', products);\n                return products; // Возвращаем данные продуктов\n            })\n            .catch((error) => {\n                console.log(error);\n                throw error; // Пробрасываем ошибку для обработки в вызывающем коде\n            });\n    },\n    async addProduct({ commit, dispatch }, productData) {\n        try {\n            const response = await axios.post('http://localhost:7676/api/products', productData);\n            const newProduct = response.data;\n            commit('ADD_PRODUCT', newProduct); // Вызываем мутацию для добавления продукта в состояние\n            await dispatch('GET_PRODUCTS_FROM_API'); // Вызываем действие для обновления списка товаров\n            console.log('Товар успешно добавлен.');\n        } catch (error) {\n            console.error(error);\n        }\n    },\n\n    ADD_TO_CART({ commit }, product) {\n        commit('SET_CART', product);\n    },\n    INCREMENT_CART_ITEM({ commit }, index) {\n        commit('INCREMENT', index)\n    },\n    DECREMENT_CART_ITEM({ commit }, index) {\n        commit('DECREMENT', index)\n    },\n    DELETE_FROM_CART({ commit }, index) {\n        commit('REMOVE_FROM_CART', index)\n    },\n    async fetchUserData({ commit }, userId) {\n        try {\n            const response = await axios.get(`http://localhost:7676/api/users/${userId}`);\n            commit('SET_USER', response.data);\n        } catch (error) {\n            console.error(error);\n        }\n    },\n    logout() {\n        // Метод для выхода пользователя\n        // Удаление токена из локального хранилища\n        localStorage.removeItem('role');\n        // Сброс состояния авторизации и роли в Vuex хранилище\n        document.cookie = 'accessToken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n        document.cookie = 'refreshToken=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';\n\n        this.$store.commit('SET_AUTH', false);\n        this.$store.commit('SET_ROLE', null);\n        this.$router.push('/login');\n    },\n    addNotification({ commit }, notification) {\n        commit(\"ADD_NOTIFICATION\", notification);\n        // Здесь можно установить таймер для автоматического удаления уведомления через некоторое время\n    },\n\n    removeNotification({ commit }, notification) {\n        commit(\"REMOVE_NOTIFICATION\", notification);\n    },\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}